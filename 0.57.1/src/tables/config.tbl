//
//	Class:	Config
//
//	NOTE: it could be unsorted, but better keep this sorted both for more friendly listing
//		and possible future load/set using tables, instead of scanning all
//

//	AI
CONFIG("ai.tick.maxactions",	5,		"maximal amount of actions for NPC to execute per tick")
CONFIG("ai.tick.intnextaction",	150,	"minimal INT required for NPC to act more than once per tick")

//	Client settings
CONFIG("client.book.maxlines",	8,		"maximal amount of lines in book page")
CONFIG("client.book.maxpages",	64,		"maximal amount of pages in book")
CONFIG("client.filter.capital",	1,		"filter lowercasing unpretty shouting using uppercase letters")
CONFIG("client.mount.roof",		1,		"allow mounted players to get under roofs")
CONFIG("client.npc.tag",		0,		"add tag [NPC] for NPC characters ingame")
CONFIG("client.party.max",		16,		"maximal amount of characters in party")
CONFIG("client.sight.base",		26,		"view sight for spyglass")

//	Core
CONFIG("core.backup.level",		7,		"amount of backup levels for saves to maintain")
CONFIG("core.loop.max",			10000,	"maximal amount of loops to allow not to hang server, 0 disables")
CONFIG("core.string.grow",		32,		"strings will grow at least for such amount of chars")
CONFIG("core.string.max",		0x1000,	"limit string being this length, throwing exception if overflowed")
CONFIG("core.string.size",		42,		"default size for strings, lower to save memory, increase to gain speed")

//	Log
CONFIG("log.command.plevel",	0,		"minimal plevel to log commands")

//	LoginServer
CONFIG("login.servers.max",		8,		"maximal amount of servers to send")

//	Map specifics
CONFIG("map.cache.time",		2*60*TICK_PER_SEC,	"amount of ticks to keep map data cached")
CONFIG("map.sector.sleepafter",	10*60*TICK_PER_SEC,	"makes sector sleeping after this ticks elapsed from last client action here")

//	Network
CONFIG("network.client.dead",	5*60*TICK_PER_SEC,	"the delay before disconnected inactive/lost client")
CONFIG("network.client.max",	1023,	"maximal amount of clients we can accept")
CONFIG("network.client.maxip",	0,		"maximal amount of clients from one IP we can accept. 0 disables limit")
CONFIG("network.conn.max",		32,		"number of connections in connecting stage to allow")
CONFIG("network.conn.maxip",	8,		"number of connections in connecting stage per one IP to allow")
CONFIG("network.iphist.pings",	15,		"amount of pings from one IP before marking it as flooding")
CONFIG("network.iphist.ttl",	300,	"time-to-live for IP history in ~1sec units")
CONFIG("network.packet.grow",	64,		"packets are growing by this amount of bytes if needed")
CONFIG("network.packet.limit",	12000,	"maximal allowed size of a packet to be sent")
CONFIG("network.packet.max",	50,		"maximum amount of packets to send to the client at once, 0 disables")
CONFIG("network.packet.size",	1024,	"initial packet size on creation")
CONFIG("network.recv.sleep",	50,		"minimal receiving network thread response time in ms")
CONFIG("network.send.sleep",	25,		"minimal sending network thread response time in ms")

//	Scripts
CONFIG("script.isgm.byplevel",	0,		"if set, isgm will return true if has plevel >= the one set, not basing on flag")
CONFIG("script.expkey.max",		64,		"maximal length of expression key length")
CONFIG("script.section.max",	64,		"maximal length of script section")

//	Skills
CONFIG("skill.over.mult",		2,		"multiplicator of max allowed skill outside the skillclass range. 0 disables limit")
CONFIG("skill.smelt.dist",		3,		"maximal distance for the forge to proceed smelting")

//	Spells
CONFIG("spell.poly.maxstat",	150,	"maximal stat raise allowed in polymorph")
CONFIG("spell.tele.player",		0x372a,	"teleport effect to use when player teleports")
CONFIG("spell.tele.staff",		0x3709,	"teleport effect to use when staff teleports")
