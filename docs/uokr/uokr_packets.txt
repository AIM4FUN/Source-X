This file will contain new/changed packet details that have been found in UOKR.

========================
0xFF  (client -> server)
LOGIN REQUEST
========================

byte[4]                 login request   (0xffffffff)

-> This is sent immediately after the client connects to the game server.
-> Always contains 0xffffffff


========================
0xE3  (server -> client)
UNKNOWN
========================

byte[1]                 packet cmd      (0xe3)
byte[2]                 packet length   (0x4d)
byte[4]                 length unkA     (0x00000003)
byte[length unkA]       unkA            (0x020103)
byte[4]                 length unkB     (0x00000013)
byte[length unkB]       unkB            (0x021100fc2fe38193cbaf98dd8313d29eeae413)
byte[4]                 length unkC     (0x00000010)
byte[length unkC]       unkC            (0x7813b77bcea8d7bc52de3830eae91ea3)
byte[4]                 unkD            (0x00000020)
byte[4]                 length unkE     (0x00000010)
byte[length unkE]       unkE            (0x5ace3ee39792e48af19ad3044103cb53)

-> This is sent by the server after the login request, and may contain some kind of
   data related to the encryption (ie. encryption keys).
-> Length is always 0x4D or the client will crash.
-> unkA[0] must be 0x02 or the client will crash.
-> Setting unkA[1] to 0x00 will cause the client to send 0s in the 0xE4 response
   (see below).
-> Setting too many 0s in the unkX can cause the client to fail connection.
-> unkB always begins with 0x021100. unkB may break down further.


========================
0xE4  (client -> server)
UNKNOWN
========================

byte[1]                 packet cmd      (0xe4)
byte[2]                 packet length   (0x17)
byte[4]                 length unkA     (0x00000010)
byte[length unkA]       unkA            (0x562d03ae30388285c4bbab38d42c12bc)

-> This is a reply to the 0xE3 packet and possibly contains the 3rd key to use with
   encryption.
-> The response is almost always different, regardless of the contents of the 0xE3
   packet.
-> In 0xE3, if unkA[1]=0x00, then unkA in this packet will always be filled with 0s,
   but this does not appear to remove encryption.

========================
0x8D  (client -> server)
CHAR CREATION
========================
-> Structure to dump
