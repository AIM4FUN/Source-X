#TimeDateStamp is a field in the PE header which isn't touched by any 3rd party tool, so it
#will always work, even with heavily modified clients.
#Note: I was the first person with this idea for client identification :)

#Version is the client version as string. Doesn't have to match the client's
#internal version string.

#Send is the address of the opcode at which point PacketPointer
#is available before the packets gets encrypted.

#SendLen is the address of the opcode at which point PacketLen
#is available before the packets gets encrypted.

#Send must be different form SendLen


#Recv is the address of the opcode at which point PacketPointer
#is available after the packet has been decompressed and assembled.

#RecvLen is the address of the opcode at which point PacketLen
#is available after the packet has been decompressed and assembled.

#Recv must be different form RecvLen


#RegBuf and RegLen tell UOLog where to find the PacketLen and the PacketPointer.
#For RegBuf in Send, the packet is at [[RegBuf+4]], i haven't found better solution.


#RegCheck is used only on send in order to check if its value is 2, SpyUo must intercept the packet,
#otherwise it's not interesting.

#Registers: EAX=1, EBX=2, ECX=3, EDX=4, ESI=5, EDI=6, EBP=7

#The clients are sorted by compilation date.
#Syntax: <TimeDateStamp: <Version> <Send> <RegBuf> <SendLen> <RegLen> <RegCheck> <Recv> <RegBuf> <RecvLen> <RegLen>

469BE8FC: "2.45.5.6 KR" 5255B3 3 5255B6 1 4 4FD7D7 1 4FD834 5
